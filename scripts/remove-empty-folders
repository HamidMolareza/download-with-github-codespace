#!/bin/bash

# remove-empty-folders - A script to remove empty folders

# Default values
path="."
max_depth=1

# Function to display help
show_help() {
    echo "Usage: $(basename "$0") [-p path] [-d max_depth]"
    echo ""
    echo "Options:"
    echo "  -p              Specify the directory path (default is $path)"
    echo "  -d              Set the maximum recursive depth (default is $max_depth)"
    echo "  -h              Show this help message"
    exit 0
}

# Parse arguments for path, limit, depth, help, and only-names
while [[ "$#" -gt 0 ]]; do
    case "$1" in
        -p) path="$2"; shift 2;;
        -d) max_depth="$2"; shift 2;;
        -h) show_help;;
        *) echo "Unknown option: $1"; show_help;;
    esac
done

# Validate that path is a directory
if [ ! -d "$path" ]; then
    echo "Invalid path: $path is not a directory."
    exit 1
fi

# Find directories smaller than 5 KB and list them
small_dirs=$(find "$path" -maxdepth "$max_depth" -type d -exec du -sk {} \; | awk '$1 < 5 {print substr($0, 3)}')

# Check if there are any small directories found
if [ -z "$small_dirs" ]; then
  echo "No directories smaller than 5 KB found in '$path'."
  exit 0
fi

# Show the directories to the user
echo "The following directories are smaller than 5 KB and will be deleted:"
echo "$small_dirs"

# Ask for user confirmation
read -rp "Do you want to proceed with deletion? (y/n): " confirm

# Process user input
if [[ "$confirm" == "y" || "$confirm" == "Y" ]]; then
  # If confirmed, delete the directories
  echo "$small_dirs" | xargs -I {} rm -rf "{}"
  echo "Directories have been deleted."
else
  # If not confirmed, abort the deletion
  echo "Operation aborted. No directories were deleted."
fi