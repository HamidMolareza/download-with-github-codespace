#!/bin/bash

# Default values
path="."
limit=5
depth=1
only_names=false

# Function to display help
show_help() {
    echo "Usage: $(basename "$0") [-p path] [-l limit] [-d depth] [--only-names]"
    echo ""
    echo "Options:"
    echo "  -p              Specify the directory path (default is $path)"
    echo "  -l              Limit the number of files to display (default is $limit)"
    echo "  -d              Set the maximum recursive depth (default is $depth)"
    echo "  --only-names    Show only the file names without size"
    echo "  -h              Show this help message"
    exit 0
}

# Parse arguments for path, limit, depth, help, and only-names
while [[ "$#" -gt 0 ]]; do
    case "$1" in
        -p) path="$2"; shift 2;;
        -l) limit="$2"; shift 2;;
        -d) depth="$2"; shift 2;;
        --only-names) only_names=true; shift 1;;
        -h) show_help;;
        *) echo "Unknown option: $1"; show_help;;
    esac
done

# Validate that path is a directory
if [ ! -d "$path" ]; then
    echo "Invalid path: $path is not a directory."
    exit 1
fi

# Command to find the biggest files
if [ "$only_names" = true ]; then
    # Show only file names
    find "$path" -maxdepth "$depth" -type f -exec du -h {} + | sort -rh | head -n "$limit" | awk '{$1=""; print substr($0, 2)}'
else
    # Show file names with sizes
    find "$path" -maxdepth "$depth" -type f -exec du -h {} + | sort -rh | head -n "$limit"
fi