#!/bin/bash

if ! command -v aws &>/dev/null; then
    echo "Error: aws is not installed. Please install it first."
    exit 1
fi

# =============== Functions ===============
show_help() {
    echo "Usage: $(basename "$0") [options]"
    echo
    echo "Options:"
    echo "  -d, --domain       Specify the S3-compatible endpoint domain."
    echo "  -n, --bucket-name  Specify the name of the S3 bucket."
    echo "  -h                 Show this help message."
    echo
    echo "Example:"
    echo "  $(basename "$0") --domain example.com --bucket-name my-bucket"
    exit 1
}

# =============== Main ===============
# Parse arguments
while [[ "$#" -gt 0 ]]; do
    case "$1" in
        -d | --domain) domain="$2"; shift 2;;
        -n | --bucket-name) bucket_name="$2"; shift 2;;
        -h) show_help;;
        *) echo "Unknown option: $1"; show_help;;
    esac
done

# Ensure both domain and bucket_name are provided
if [[ -z "$domain" || -z "$bucket_name" ]]; then
    show_help
fi

# Check if domain starts with http or https, if not prepend https://
if [[ ! "$domain" =~ ^http ]]; then
    domain="https://$domain"
fi

# Get the list of object keys in the bucket
FILES=$(aws --endpoint-url "$domain" s3api list-objects --bucket "$bucket_name" --query "Contents[].Key" --output json)

# Extract the file keys from JSON and format them as URLs
echo "$FILES" | jq -r '.[]' | while read -r file_key; do
    echo "https://$bucket_name.$domain/$file_key"
done
